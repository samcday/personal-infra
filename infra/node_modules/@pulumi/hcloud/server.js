"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * ## Import
 *
 * Servers can be imported using the server `id`
 *
 * ```sh
 *  $ pulumi import hcloud:index/server:Server myserver <id>
 * ```
 */
class Server extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["backupWindow"] = state ? state.backupWindow : undefined;
            inputs["backups"] = state ? state.backups : undefined;
            inputs["datacenter"] = state ? state.datacenter : undefined;
            inputs["firewallIds"] = state ? state.firewallIds : undefined;
            inputs["image"] = state ? state.image : undefined;
            inputs["ipv4Address"] = state ? state.ipv4Address : undefined;
            inputs["ipv6Address"] = state ? state.ipv6Address : undefined;
            inputs["ipv6Network"] = state ? state.ipv6Network : undefined;
            inputs["iso"] = state ? state.iso : undefined;
            inputs["keepDisk"] = state ? state.keepDisk : undefined;
            inputs["labels"] = state ? state.labels : undefined;
            inputs["location"] = state ? state.location : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["networks"] = state ? state.networks : undefined;
            inputs["rescue"] = state ? state.rescue : undefined;
            inputs["serverType"] = state ? state.serverType : undefined;
            inputs["sshKeys"] = state ? state.sshKeys : undefined;
            inputs["status"] = state ? state.status : undefined;
            inputs["userData"] = state ? state.userData : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.image === undefined) && !opts.urn) {
                throw new Error("Missing required property 'image'");
            }
            if ((!args || args.serverType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serverType'");
            }
            inputs["backups"] = args ? args.backups : undefined;
            inputs["datacenter"] = args ? args.datacenter : undefined;
            inputs["firewallIds"] = args ? args.firewallIds : undefined;
            inputs["image"] = args ? args.image : undefined;
            inputs["iso"] = args ? args.iso : undefined;
            inputs["keepDisk"] = args ? args.keepDisk : undefined;
            inputs["labels"] = args ? args.labels : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["networks"] = args ? args.networks : undefined;
            inputs["rescue"] = args ? args.rescue : undefined;
            inputs["serverType"] = args ? args.serverType : undefined;
            inputs["sshKeys"] = args ? args.sshKeys : undefined;
            inputs["userData"] = args ? args.userData : undefined;
            inputs["backupWindow"] = undefined /*out*/;
            inputs["ipv4Address"] = undefined /*out*/;
            inputs["ipv6Address"] = undefined /*out*/;
            inputs["ipv6Network"] = undefined /*out*/;
            inputs["status"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(Server.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing Server resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new Server(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of Server.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Server.__pulumiType;
    }
}
exports.Server = Server;
/** @internal */
Server.__pulumiType = 'hcloud:index/server:Server';
//# sourceMappingURL=server.js.map