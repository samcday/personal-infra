"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Define services for Hetzner Cloud Load Balancers.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as hcloud from "@pulumi/hcloud";
 *
 * const loadBalancer = new hcloud.LoadBalancer("loadBalancer", {
 *     loadBalancerType: "lb11",
 *     location: "nbg1",
 * });
 * const loadBalancerService = new hcloud.LoadBalancerService("loadBalancerService", {
 *     loadBalancerId: hcloud_load_balancer.test_load_balancer.id,
 *     protocol: "http",
 * });
 * ```
 *
 * ## Import
 *
 * Load Balancer Service entries can be imported using a compound ID with the following format`<load-balancer-id>__<listen-port>`
 *
 * ```sh
 *  $ pulumi import hcloud:index/loadBalancerService:LoadBalancerService myloadbalancernetwork 123__80
 * ```
 */
class LoadBalancerService extends pulumi.CustomResource {
    constructor(name, argsOrState, opts) {
        let inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            inputs["destinationPort"] = state ? state.destinationPort : undefined;
            inputs["healthCheck"] = state ? state.healthCheck : undefined;
            inputs["http"] = state ? state.http : undefined;
            inputs["listenPort"] = state ? state.listenPort : undefined;
            inputs["loadBalancerId"] = state ? state.loadBalancerId : undefined;
            inputs["protocol"] = state ? state.protocol : undefined;
            inputs["proxyprotocol"] = state ? state.proxyprotocol : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.loadBalancerId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'loadBalancerId'");
            }
            if ((!args || args.protocol === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protocol'");
            }
            inputs["destinationPort"] = args ? args.destinationPort : undefined;
            inputs["healthCheck"] = args ? args.healthCheck : undefined;
            inputs["http"] = args ? args.http : undefined;
            inputs["listenPort"] = args ? args.listenPort : undefined;
            inputs["loadBalancerId"] = args ? args.loadBalancerId : undefined;
            inputs["protocol"] = args ? args.protocol : undefined;
            inputs["proxyprotocol"] = args ? args.proxyprotocol : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion() });
        }
        super(LoadBalancerService.__pulumiType, name, inputs, opts);
    }
    /**
     * Get an existing LoadBalancerService resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new LoadBalancerService(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of LoadBalancerService.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LoadBalancerService.__pulumiType;
    }
}
exports.LoadBalancerService = LoadBalancerService;
/** @internal */
LoadBalancerService.__pulumiType = 'hcloud:index/loadBalancerService:LoadBalancerService';
//# sourceMappingURL=loadBalancerService.js.map