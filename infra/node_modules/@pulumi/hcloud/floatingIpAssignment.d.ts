import * as pulumi from "@pulumi/pulumi";
/**
 * Provides a Hetzner Cloud Floating IP Assignment to assign a Floating IP to a Hetzner Cloud Server. Deleting a Floating IP Assignment will unassign the Floating IP from the Server.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as hcloud from "@pulumi/hcloud";
 *
 * const node1 = new hcloud.Server("node1", {
 *     image: "debian-9",
 *     serverType: "cx11",
 *     datacenter: "fsn1-dc8",
 * });
 * const master = new hcloud.FloatingIp("master", {
 *     type: "ipv4",
 *     homeLocation: "nbg1",
 * });
 * const main = new hcloud.FloatingIpAssignment("main", {
 *     floatingIpId: master.id,
 *     serverId: node1.id,
 * });
 * ```
 *
 * ## Import
 *
 * Floating IP Assignments can be imported using the `floating_ip_id`
 *
 * ```sh
 *  $ pulumi import hcloud:index/floatingIpAssignment:FloatingIpAssignment myfloatingipassignment <floating_ip_id>
 * ```
 */
export declare class FloatingIpAssignment extends pulumi.CustomResource {
    /**
     * Get an existing FloatingIpAssignment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FloatingIpAssignmentState, opts?: pulumi.CustomResourceOptions): FloatingIpAssignment;
    /**
     * Returns true if the given object is an instance of FloatingIpAssignment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is FloatingIpAssignment;
    /**
     * ID of the Floating IP.
     */
    readonly floatingIpId: pulumi.Output<number>;
    /**
     * Server to assign the Floating IP to.
     */
    readonly serverId: pulumi.Output<number>;
    /**
     * Create a FloatingIpAssignment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FloatingIpAssignmentArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering FloatingIpAssignment resources.
 */
export interface FloatingIpAssignmentState {
    /**
     * ID of the Floating IP.
     */
    readonly floatingIpId?: pulumi.Input<number>;
    /**
     * Server to assign the Floating IP to.
     */
    readonly serverId?: pulumi.Input<number>;
}
/**
 * The set of arguments for constructing a FloatingIpAssignment resource.
 */
export interface FloatingIpAssignmentArgs {
    /**
     * ID of the Floating IP.
     */
    readonly floatingIpId: pulumi.Input<number>;
    /**
     * Server to assign the Floating IP to.
     */
    readonly serverId: pulumi.Input<number>;
}
